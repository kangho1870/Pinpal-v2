name: Deploy to cafe24(gh1870)

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: kangho1870/pinpal
  DOCKER_TAG: latest

jobs:
  build-backend:
    name: Build Backend and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Build JAR
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: allcover_project/package-lock.json

      - name: Install dependencies
        run: |
          cd allcover_project
          npm ci --legacy-peer-deps

      - name: Build frontend
        run: |
          cd allcover_project
          CI=false npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }} # git secret 수정

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: allcover_project/build/

  deploy:
    name: Deploy to Cafe24 Server
    runs-on: ubuntu-latest
    needs: [ build-backend, build-frontend ]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend-build/

      - name: Deploy to Cafe24
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CAFE24_HOST }}
          username: ${{ secrets.CAFE24_USERNAME }}
          password: ${{ secrets.CAFE24_PASSWORD }}
          port: 22
          script: |
            echo "=== Backend 배포 시작 ==="

            # 기존 컨테이너 중지 및 제거
            docker stop pinpal-backend || true
            docker rm pinpal-backend || true

            # 최신 이미지 pull
            docker pull kangho1870/pinpal:latest

            # 새 컨테이너 실행 (host network 사용 → DB 연결 문제 해결)
            docker run -d \
              --name pinpal-backend \
              --restart unless-stopped \
              --network host \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e DB_URL="jdbc:postgresql://localhost:5432/pinpal" \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e KAKAO_CLIENT_ID="${{ secrets.KAKAO_CLIENT_ID }}" \
              -e KAKAO_CLIENT_SECRET="${{ secrets.KAKAO_CLIENT_SECRET }}" \
              -e KAKAO_REDIRECT_URI="https://pinpal.co.kr/auth/kakao/callback" \
              kangho1870/pinpal:latest

            echo "✅ Backend 컨테이너 실행 완료"

            echo "=== Frontend 배포 시작 ==="
            FRONTEND_DIR=/home/${{ secrets.CAFE24_USERNAME }}/pinpal-frontend
            rm -rf $FRONTEND_DIR
            mkdir -p $FRONTEND_DIR
      - name: Upload frontend build
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.CAFE24_HOST }}
          username: ${{ secrets.CAFE24_USERNAME }}
          password: ${{ secrets.CAFE24_PASSWORD }}
          port: ${{ secrets.CAFE24_PORT }}
          source: "frontend-build/*"
          target: "/home/${{ secrets.CAFE24_USERNAME }}/pinpal-frontend"

      - name: Setup Nginx reverse proxy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.CAFE24_HOST }}
          username: ${{ secrets.CAFE24_USERNAME }}
          password: ${{ secrets.CAFE24_PASSWORD }}
          port: ${{ secrets.CAFE24_PORT }}
          script: |
            echo "=== Nginx 설정 적용 ==="

            sudo tee /etc/nginx/sites-available/pinpal.conf > /dev/null <<EOF
            server {
                listen 80;
                server_name pinpal.co.kr;

                root /home/${{ secrets.CAFE24_USERNAME }}/pinpal-frontend;
                index index.html;

                location / {
                    try_files \$uri /index.html;
                }

                location /api {
                    proxy_pass http://localhost:8000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOF

            sudo ln -sf /etc/nginx/sites-available/pinpal.conf /etc/nginx/sites-enabled/pinpal.conf
            sudo systemctl restart nginx
            echo "✅ Nginx 재시작 완료"

            # SSL (최초 1회만)
            if ! sudo test -f /etc/letsencrypt/live/pinpal.co.kr/fullchain.pem; then
              sudo apt-get update && sudo apt-get install -y certbot python3-certbot-nginx
              sudo certbot --nginx -d pinpal.co.kr --non-interactive --agree-tos -m admin@pinpal.co.kr
            fi
